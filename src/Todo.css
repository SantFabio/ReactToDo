:root {
    font-size: 65.2%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-size: 18px;
    position: relative;
}

ul {
    list-style: none;
    padding: 0;
}
.taskFilterStats{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2.4rem 0 2.4rem;
    font-size: 1.4rem;
    height: 5.0rem;
    color: #9495A5;
}
.taskFilterStats > div:last-child:hover {
    cursor: pointer;
    color: #494C6B;
}
.taskFilterStats-child2{
    display: flex;
    justify-content: space-between;
    width: 15.6rem;
    font-weight: 700;
}
.taskFilterStats-child2 > div:hover{
    color: #494C6B;
    cursor: pointer;
}

.btn-done {
    width: 24px;
    height: 24px;
    background: linear-gradient(138deg, rgba(87, 221, 255, 1) 0%, rgba(192, 88, 243, 1) 100%);
    border-radius: 50%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.undone {
    width: 22px;
    height: 22px;
    background-color: #ffffff;
    border-radius: 50%;
    position: relative;
}

.check {
    text-decoration: line-through;
    color: hsl(236, 33%, 92%);
}

.needToCheck {
    color: hsl(235, 19%, 35%);
}
.container {
    position: relative;
    max-width: 54.0rem;
    height: auto;
    margin: auto;
    top: -250px;
}
.card {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 6.4rem;
    width: auto;
    border-bottom: 1px solid hsl(236, 33%, 92%);
    padding-left: 2.4rem;
    padding-right: 2.4rem;
}
.input{
    display: flex;
    justify-content: flex-start;
    /* margin-bottom: 2.4rem; */
    border-radius: 5px;
}
input{
    border: none;
    font-family: Josefin Sans;
    font-size: 1.8rem;
    width: 40.8rem;
    margin-left: 2.4rem;
}
input:focus {
    outline: none;
    border: none;
    caret-color: #3A7CFD;
}
.form{
    display: flex;
    align-items: center;
    height: 6.4rem;
    width: auto;
    padding-left: 2.4rem;
    padding-right: 2.4rem;
    border-radius: 5px;
}
.textItem{
    width: 40.8rem;
    margin-right: 2.0rem;
    overflow: hidden;

}
button{
    all: unset;
}
.card > button{
    margin-right: 2.0rem;
}
.main {
    border-radius: 5px;
    background-color: #ffffff;
    box-shadow: 0px 35px 50px -15px rgb(194, 195, 214); 
}
.image {
    margin: 0;
    padding: 0;
    height: 29.0rem;
    width: 100vw;
    background:linear-gradient(5deg, rgba(192,88,243,0.8) 23%, rgba(105,107,248,0.8) 67%, rgba(58,123,253,0.8) 93%),
    url("./components/assets/images/horizon.png") 47% 47%/cover no-repeat;

}

header > div {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modo {
    border: none;
    background-color: transparent;
    height: 2.6rem;
}
h1 {
    color: #FFF;
    font-size: 4.0rem;
    font-weight: 700;
    letter-spacing: 1.5rem;
}
.filterInFocus{
    color: #3A7CFD;
}

.del:hover{
    cursor: pointer;
}
.popup {
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    top: 80%;
    width: 100%;
    max-width: 49.0rem;
    border-radius: 5px;
    display: flex;
    justify-content: center;
    box-shadow: 10px 10px 31px #bebebe, -10px -10px 31px #bebebe;

    opacity: 0; /* Inicia com opacidade zero */
    visibility: hidden; /* Inicia como oculto */
    transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s; /* Adiciona uma transição suave para a opacidade */
}

.popup.show {
    opacity: 1; /* Quando a classe .show é adicionada, a opacidade é alterada para 1 */
    visibility: visible; /* Quando a classe .show é adicionada, o elemento fica visível */
}

